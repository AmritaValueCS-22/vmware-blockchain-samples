{
  "name": "eth-marketplace-clarity",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e",
    "start": "ng serve --proxy-config proxy.conf.json --disable-host-check",
    "build": "npm run clean-dist-ui; ng build --prod --vendor-chunk --progress=false; npm run build-copy;",
    "build-uuid": "node -p 'try{const id=`${new Date().toISOString()}_${require(\"uuid\").v4()}`; require(`fs`).writeFileSync(`.build.uuid`, id, `utf8`); `build uuid: ${id}`;}catch(e){e.stack}'",
    "build-server": "rm -rf dist-server/*; rm -rf dist-server-deps/*; npm run --silent build-uuid; tsc -t es5 ganymede.app.server.ts; node --max-old-space-size=262144 ganymede.app.server.js compileOnly; node src/app/ganymede/server/source.export.js",
    "build-destor": "tsc -t es5 src/app/ganymede/destor/src/destor.entrypoint.ts",
    "build-copy": "mkdir -p dist/export; rm -rf dist/export/*; cp -a dist/$npm_package_name/* dist/export",
    "docker-build-baseimg": "docker build -t gany-base-image -f src/app/ganymede/docker/base.image.Dockerfile .;",
    "docker-build-ui": "npm run build; npm run --slient docker-build-baseimg; docker build -t gany-ui -f src/app/ganymede/docker/ganymede.docker.ui.Dockerfile .; docker tag gany-ui $npm_package_name-ui",
    "docker-build-server": "npm run build-server; npm run --slient docker-build-baseimg; docker build -t gany-server -f src/app/ganymede/docker/ganymede.docker.server.Dockerfile .; docker tag gany-server $npm_package_name-server",
    "docker-build-destor": "npm run build-destor; npm run --slient docker-build-baseimg; docker build -t gany-destor -f src/app/ganymede/docker/ganymede.docker.destor.Dockerfile .; docker tag gany-destor $npm_package_name-destor",
    "docker-up": "docker-compose -f ./src/app/ganymede/docker/ganymede.dc-local.yml up -d",
    "docker-up-ui": "docker-compose -f ./src/app/ganymede/docker/ganymede.dc-local-ui.yml up -d",
    "docker-up-server": "docker-compose -f ./src/app/ganymede/docker/ganymede.dc-local-server.yml up -d",
    "docker-up-destor": "docker-compose -f ./src/app/ganymede/docker/ganymede.dc-local-destor.yml up -d",
    "docker-down-ui": "docker-compose -f ./src/app/ganymede/docker/ganymede.dc-local-ui.yml down",
    "docker-down-server": "docker-compose -f ./src/app/ganymede/docker/ganymede.dc-local-server.yml down",
    "docker-down-destor": "docker-compose -f ./src/app/ganymede/docker/ganymede.dc-local-destor.yml down",
    "docker-down": "docker-compose -f ./src/app/ganymede/docker/ganymede.dc-local.yml down",
    "docker-nuke": "docker rm -vf $(docker ps -a -q); docker rmi -f $(docker images -a -q);",
    "docker-nuke-none": "docker image rm $(docker image ls -f 'dangling=true' -q)",
    "docker": "npm run --silent docker-down; npm run --silent docker-up",
    "server": "tsc -t es5 ganymede.app.server.ts; node --max-old-space-size=262144 ganymede.app.server.js",
    "destor": "tsc -t es5  src/app/ganymede/destor/src/destor.entrypoint.ts; node --max-old-space-size=262144 src/app/ganymede/destor/src/destor.entrypoint.js",
    "iface-update": "cp src/app/ganymede/defaults/ganymede.app.interface.ts ganymede.app.interface.ts",
    "sw-update": "cp src/app/ganymede/components/util/sw/sw.ts src/assets-root/sw.ts; tsc src/assets-root/sw.ts;",
    "electron-src-init": "mkdir -p dist-electron; mkdir -p dist-electron-src/src; cp src/app/electron/package.json dist-electron-src/package.json; cd dist-electron-src; mkdir -p node_modules; rm -rf package-lock.json; npm install",
    "electron-compile": "mkdir -p dist-electron-src/ganymede/electron; cp src/app/electron/* dist-electron-src/src; cp src/app/ganymede/electron/* dist-electron-src/ganymede/electron; tsc --target es5 dist-electron-src/src/electron.ts;",
    "electron-fullmake": "npm run electron-src-init; npm run electron-compile;",
    "electron-start": "npm run electron-compile && electron . start",
    "electron-test": "npm run electron-compile && electron . test",
    "electron-build-mac": "npm run electron-fullmake; electron-packager . --overwrite --platform=darwin --arch=x64 --icon=dist/assets/ico/mac/icon.icns --prune=true --out=dist-electron --dir=dist-electron --ignore='(dist/export*|src*|profiles*|node_modules*|ganymede.app.server*|ganymede.secrets*)' --extra-resource=dist-electron-src",
    "clean-dist": "rm -rf dist/*; rm -rf dist-electron/*; rm -rf dist-server/*;",
    "clean-dist-ui": "rm -rf dist/*; rm -rf dist-electron/*;",
    "product-name": "node -p 'try{require(`./ganymede.conf.json`).productName}catch(e){``}'",
    "version": "echo $npm_package_version",
    "postinstall": "node patch.js"
  },
  "private": true,
  "main": "ganymede.electron.js",
  "dependencies": {
    "@angular/animations": "^11.2.9",
    "@angular/common": "^11.2.9",
    "@angular/core": "^11.2.9",
    "@angular/forms": "^11.2.9",
    "@angular/platform-browser": "^11.2.9",
    "@angular/platform-browser-dynamic": "^11.2.9",
    "@angular/router": "^11.2.9",
    "@cds/core": "^5.1.1",
    "@clr/angular": "^5.1.1",
    "@clr/core": "^4.0.12",
    "@clr/icons": "^5.1.1",
    "@clr/ui": "5.1.1",
    "@jovian/fourq": "^1.0.13",
    "@jovian/langster": "0.0.6",
    "@jovian/type-tools": "^6.0.38",
    "@ngrx/effects": "^11.1.0",
    "@ngrx/store": "^11.1.0",
    "@ngx-translate/core": "^13.0.0",
    "@ngx-translate/http-loader": "^6.0.0",
    "@webcomponents/webcomponentsjs": "^2.5.0",
    "ngx-markdown": "^11.1.2",
    "rxjs": "~6.6.7",
    "tslib": "^2.2.0",
    "typescript": "^4.2.4",
    "web3": "^1.5.1",
    "zone.js": "^0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^0.1102.8",
    "@angular/cli": "~11.2.8",
    "@angular/compiler": "^11.2.9",
    "@angular/compiler-cli": "^11.2.9",
    "@types/jasmine": "~3.6.9",
    "@types/jasminewd2": "~2.0.8",
    "@types/node": "^14.14.37",
    "codelyzer": "^6.0.1",
    "electron": "^12.0.2",
    "fast-glob": "^3.2.5",
    "jasmine-core": "^3.7.1",
    "jasmine-spec-reporter": "~7.0.0",
    "karma": "~6.3.2",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage-istanbul-reporter": "~3.0.3",
    "karma-jasmine": "~4.0.1",
    "karma-jasmine-html-reporter": "^1.5.4",
    "protractor": "~7.0.0",
    "ts-node": "~9.1.1",
    "tslint": "~5.20.1"
  }
}
