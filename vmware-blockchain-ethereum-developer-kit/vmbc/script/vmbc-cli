#!/bin/bash

. ./utils.sh

# Get the options
getOptions

# Souce proper env
sourceEnv

function pullImages()
{
    if [ "$ENABLE_MINIKUBE" == "true" ] || [ "$ENABLE_MINIKUBE" == "True" ] || [ "$ENABLE_MINIKUBE" == "TRUE" ]; then
        isMinikubeRunning=`minikube status | grep -e 'apiserver: Running' -e 'kubelet: Running' -e 'host: Running' -c`
        if [ ! -f /tmp/last-blkchn-id ] && [ $isMinikubeRunning -eq 3 ]; then
            if [ "$MODE" == "release" ]; then
                infoln ''
                infoln "---------------- Registry Login ----------------"
                minikube ssh "docker login vmwaresaas.jfrog.io --username '${benzeneu}' --password '${benzene}'"
                if [ "$?" -ne "0" ]; then
                    fatalln "Invalid Credentials. Exiting.."
                    exit 1
                fi
            else
                if [ -z ${ARTIFACTORY_KEY} ]; then
                    echo "ARTIFACTORY_KEY is unset. Please set the ARTIFACTORY_KEY for the docker registry"
                    exit 1
                fi
            fi

            if ! minikube ssh docker image inspect ${concord_repo}:${concord_tag} >&/dev/null; then
                infoln ''
                infoln "---------------- Pulling image  ${concord_repo}:${concord_tag}, this may take several minutes... ----------------"
                minikube ssh "docker pull ${concord_repo}:${concord_tag}"
            fi

            if ! minikube ssh docker image inspect ${clientservice_repo}:${clientservice_tag} >&/dev/null; then
                infoln ''
                infoln "---------------- Pulling image  ${clientservice_repo}:${clientservice_tag}, this may take several minutes... ----------------"
                minikube ssh "docker pull ${clientservice_repo}:${clientservice_tag}"
            fi

            if ! minikube ssh docker image inspect ${ethrpc_repo}:${ethrpc_tag} >&/dev/null; then
                infoln ''
                infoln "---------------- Pulling image  ${ethrpc_repo}:${ethrpc_tag}, this may take several minutes... ----------------"
                minikube ssh "docker pull ${ethrpc_repo}:${ethrpc_tag}"
            fi
        fi
    fi
}

function printHelp()
{
    infoln "Usage:"
    infoln "   ${0}"
    infoln "       Flags:"
    infoln "       --deployment-type PROVISION|DEPROVISION"
    infoln "       --set-username-password --username 'username' --password 'password'"
    infoln "       --healthcheck"
    infoln "       --h"
}

if [[ $# -lt 1 ]] ; then
  printHelp
  exit 0
fi

# Check Pre-requisites
checkPreReqs

dtype=""
setusrpass=0
username=""
password=""

while [[ "$#" -gt 0 ]]; do
    case $1 in
        -dt|--deployment-type) dtype="$2"; shift ;;
        --set-username-password) setusrpass=1; ;;
        --username) username="$2"; shift ;;
        --password) password="$2"; shift ;;
        -health|--healthcheck) test=1 ;;
        -h|--help) printHelp; exit 1;;
        *) errorln "Unknown parameter passed: $1"; printHelp; exit 1 ;;
    esac
    shift
done

if [ "$dtype" != "" ]; then
    if [ "$dtype" == "PROVISION" ]; then
        pullImages
        python3 orchestrator.py --create
    elif [ "$dtype" == "DEPROVISION" ]; then
        python3 orchestrator.py --delete 
    else
        errorln "Unknown deployment-type"; 
    fi
fi

if [ "$setusrpass" == 1 ] && [ ! -z "$username" ] && [ ! -z "$password" ]; then
    orgString="benzene=.*"
    repString="benzene='${password}'"
    if [ "$ARCH" == "Darwin" ]; then
        sed -i '' "s/${orgString}$/${repString}/g" ../.env.release
    else
        sed -i "s/${orgString}$/${repString}/g" ../.env.release
    fi
    orgString="benzeneu=.*"
    repString="benzeneu='${username}'"
    if [ "$ARCH" == "Darwin" ]; then
        sed -i '' "s/${orgString}$/${repString}/g" ../.env.release
    else
        sed -i "s/${orgString}$/${repString}/g" ../.env.release
    fi
fi

if [ "$test" == 1 ]; then
    python3 orchestrator.py --test
fi
